#include<stdio.h>
#include<stdlib.h>

int set[10];

typedef struct weight
{
	int u,v,wit;
}weight;

void sort(weight wt[],int m)
{
	weight t;
	int i,j;
	for (i = 0; i < m; ++i)
	{
		for (j = 0; j < m-1; ++j)
		{
			if (wt[j].wit > wt[j+1].wit)
			{
				t = wt[j+1];
				wt[j+1] = wt[j];
				wt[j] = t;
			}
		}
	}
}

int check(int k,int m)
{

	for (int i = 0; i < m; ++i)
	{
		if (set[i]==k)
		{
			set[i]=-1;
			return 1;

		}
	}
	return 0;
}

void MSTkruskal(weight wt[],int m)
{
	int uk,vk,witk,i=0,unio[m][3],l,r,sum=0;
	while(i<m)
	{
		uk = wt[i].u;
		vk = wt[i].v;
		witk = wt[i].wit;

		l=check(uk,m);
		r=check(vk,m);

		if(l||r)
		{
			unio[i][0] = uk;
			unio[i][1] = vk;
			unio[i][2] = witk;
		}
		else
        {
           unio[i][0] = 0;
			unio[i][1] = 0;
			unio[i][2] = 0;
		}
		i++;
	}
	for (int i = 0; i < m-1; ++i)
	{
		if (unio[i][0]!=0 && unio[i][1]!=0)
		{
			printf("(%d, %d) ",unio[i][0],unio[i][1]);
            sum=sum+unio[i][2];
		}
	}

    printf("\nCost of MCST is %d\n",sum);

}

void main()
{
	weight wt[10];
	int n,m,sum=0;
	printf("Enter Number of Vertices: ");
	scanf("%d",&n);
	printf("Enter Vertices \n");
	for (int i = 0; i < n; i++)
	{
		scanf("%d",&set[i]);
	}
	printf("Enter no. of Edges: ");
	scanf("%d",&m);
	printf("Enter Edges w.r.t Weights \n(U V Wt)\n");
	for (int i = 0; i <m; ++i)
	{
		scanf("%d %d %d",&wt[i].u,&wt[i].v,&wt[i].wit);
	}
	sort(wt,m);
	printf("\nSORTED EDGES\nu v w\n");
	for (int i = 0; i < m; ++i)
	{
		printf("%d %d %d\n",wt[i].u,wt[i].v,wt[i].wit);
	}
	printf("MCST is formed .\n");
	printf("The edges of MCST are :\n");
	MSTkruskal(wt,m);
}
